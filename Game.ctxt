#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ A\ Game\ object\ is\ an\ instance\ of\ NordicTraveller.\r\n\ @author\ Nikolaj\ Ignatieff\ Schwartzbach.\r\n\ @version\ December\ 2020.\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Creates\ a\ new\ Game\ object\ with\ a\ random\ seed.\r\n
comment10.params=c\ p
comment10.target=void\ putPosition(City,\ java.awt.Point)
comment10.text=\r\n\ Associates\ a\ given\ City\ object\ with\ its\ GUI\ position.\r\n\ @param\ c\ \ \ City.\r\n\ @param\ p\ \ \ Position\ (as\ a\ Point\ object).\r\n
comment11.params=c
comment11.target=java.awt.Point\ getPosition(City)
comment11.text=\r\n\ Gets\ the\ GUI\ position\ of\ a\ given\ City.\r\n\ @param\ c\ \ \ City.\r\n\ @return\ \ \ \ Position\ of\ the\ speicifed\ city\ (as\ a\ Point\ object).\r\n
comment12.params=
comment12.target=Position\ getRandomStartingPosition()
comment12.text=\r\n\ Returns\ the\ position\ of\ a\ random\ City\ (by\ a\ choosing\ a\ random\ Country\ and\ then\ a\ random\ City\ within\ that\ Country).\r\n\ @return\ \ \ Position\ of\ a\ Random\ City.\r\n
comment13.params=name\ value\ country
comment13.target=void\ addCity(java.lang.String,\ int,\ java.lang.String)
comment13.text=\r\n\ Adds\ a\ City\ to\ a\ Country\ .\r\n\ @param\ city\ \ \ \ The\ name\ of\ the\ city.\r\n\ @param\ value\ \ \ The\ initial\ value\ of\ the\ city.\r\n\ @param\ contry\ \ The\ name\ of\ the\ country.\r\n
comment14.params=
comment14.target=void\ reset()
comment15.params=resetSeed
comment15.target=void\ reset(boolean)
comment15.text=\r\n\ Resets\ this\ Game\ object\ (by\ resetting\ the\ log,\ Random\ object\ and\ all\ countries).\r\n\ Assigns\ random\ positions\ to\ all\ players.\r\n
comment16.params=set
comment16.target=java.lang.Object\ getRandom(java.util.Collection)
comment16.text=\r\n\ Returns\ a\ random\ element\ in\ a\ given\ Set.\r\n\ @param\ set\ \ \ \ The\ set.\r\n\ @return\ \ \ \ \ \ \ A\ randomly\ chosen\ element\ from\ the\ given\ set.\r\n
comment17.params=p
comment17.target=void\ setGUIPlayer(GUIPlayer)
comment17.text=\r\n\ Sets\ the\ GUI\ Player\ (the\ one\ controlled\ by\ the\ GUI).\ \r\n\ @param\ p\ \ \ The\ Player\ object\ representing\ the\ GUI\ Player.\r\n
comment18.params=
comment18.target=java.util.List\ getCountries()
comment18.text=\r\n\ Gets\ a\ list\ of\ all\ countries\ within\ this\ Game.\r\n\ @return\ \ \ List\ of\ all\ countries.\r\n
comment19.params=c
comment19.target=void\ addCountry(Country)
comment19.text=\r\n\ Adds\ a\ given\ Country\ to\ this\ Game.\r\n\ @param\ c\ \ \ Country\ to\ be\ added.\r\n
comment2.params=seed
comment2.target=Game(int)
comment2.text=\r\n\ Creates\ a\ new\ Game\ object\ with\ a\ specified\ seed.\r\n\ @param\ seed\ \ \ The\ seed\ value\ to\ be\ used.\r\n
comment20.params=
comment20.target=Player\ getGUIPlayer()
comment20.text=\r\n\ Gets\ the\ GUI\ Player\ (the\ one\ controlled\ by\ the\ GUI).\r\n\ @return\ \ Reference\ to\ the\ GUI\ Player.\r\n
comment21.params=
comment21.target=java.util.List\ getPlayers()
comment21.text=\r\n\ Gets\ a\ list\ of\ all\ players\ in\ this\ Gamee.\r\n\ @return\ \ \ List\ of\ all\ players.\r\n
comment22.params=name
comment22.target=City\ getCity(java.lang.String)
comment22.text=\r\n\ Finds\ a\ city\ with\ the\ specified\ name\ (in\ an\ arbitrary\ country).\r\n\ @param\ name\ \ \ Name\ of\ the\ city\ to\ search\ for\ (case\ sensitive).\r\n\ @return\ \ \ \ \ \ \ City\ object\ with\ the\ speicified\ named\ (or\ 'null').\r\n
comment23.params=
comment23.target=void\ step()
comment23.text=\r\n\ Advances\ this\ Game\ one\ step.\r\n\ A\ step\ consists\ of\ moving\ all\ players\ one\ step\ on\ the\ road\ they\ are\ currently\ travelling,\ as\ well\ as\ updating\ money.\r\n\ If\ the\ step\ finishes\ the\ game\ (getStepsLeft()\=\=1),\ the\ Log\ of\ this\ Game\ is\ saved\ to\ 'last.log'.\r\n
comment24.params=
comment24.target=int\ getStepsLeft()
comment24.text=\r\n\ Gets\ the\ number\ of\ steps\ remaining\ in\ this\ Game\ instance.\r\n\ @return\ An\ integer\ representing\ how\ many\ steps\ this\ Game\ object\ can\ take\ before\ reaching\ the\ end.\r\n
comment25.params=c
comment25.target=void\ clickCity(City)
comment25.text=\r\n\ This\ method\ is\ called\ whenever\ a\ City\ is\ clicked.\r\n\ Is\ used\ mainly\ by\ the\ GUI\ instance\ to\ invoke\ player\ commands.\r\n\ It\ is\ also\ used\ by\ the\ LogPlayer\ to\ simulate\ mouse\ clicks.\r\n\ @param\ c\ The\ city\ to\ click.\r\n
comment26.params=a\ b\ lenght
comment26.target=void\ addRoads(java.lang.String,\ java.lang.String,\ int)
comment26.text=\r\n\ Adds\ roads\ between\ 'a'\ and\ 'b'\ (if\ they\ exist)\ with\ a\ given\ length.\r\n\ Adds\ a\ road\ from\ a\ to\ b,\ as\ well\ as\ a\ road\ from\ b\ to\ a\ (it\ is\ a\ symmetrical\ operator).\r\n\ @param\ a\ \ \ \ Name\ of\ the\ first\ city.\r\n\ @param\ b\ \ \ \ Name\ of\ the\ second\ city.\r\n\ @param\ length\ \ Length\ of\ the\ road\ to\ to\ be\ added..\r\n
comment27.params=a\ b\ length
comment27.target=void\ addRoads(City,\ City,\ int)
comment27.text=\r\n\ Adds\ roads\ between\ 'a'\ and\ 'b'\ (if\ they\ exist)\ with\ a\ given\ length.\r\n\ Adds\ a\ road\ from\ a\ to\ b,\ as\ well\ as\ a\ road\ from\ b\ to\ a\ (it\ is\ a\ symmetrical\ operator).\r\n\ @param\ a\ \ \ \ \ \ \ First\ City\ object.\r\n\ @param\ b\ \ \ \ \ \ \ Second\ City\ object.\r\n\ @param\ length\ \ Length\ of\ the\ road\ to\ construct.\r\n
comment28.params=
comment28.target=int\ getTotalSteps()
comment28.text=\r\n\ Gets\ how\ much\ time\ this\ game\ had\ at\ its\ initialization.\r\n\ @return\ An\ integer\ representing\ how\ many\ steps\ this\ Game\ had\ available\ when\ it\ was\ created.\r\n
comment29.params=totalSteps
comment29.target=void\ setTotalSteps(int)
comment29.text=\r\n\ Changes\ the\ total\ time\ left\ of\ this\ Game\ instance.\r\n\ @param\ totalSteps\ The\ new\ total\ time\ left.\r\n
comment3.params=path
comment3.target=Game\ fromFile(java.lang.String)
comment3.text=\r\n\ Constructs\ a\ new\ Game\ object\ from\ a\ file.\r\n\ The\ file\ is\ decoded\ using\ UTF-8\ and\ each\ line\ must\ have\ the\ following\ form\ [CMD]\ [args...],\ CMD\ is\ one\ of\ the\ following\ commands\r\n\ (up\ to\ ~\ where\ x\ ~\ y\ is\ a\ shorthand\ or\ x.equalsIgnoreCase(y))\:\r\n\ \ -\ Game\:\ set\ the\ game\ to\ a\ new\ Game\ with\ seed\ args[0].\r\n\ \ -\ Country\:\ create\ a\ new\ Country\ with\ name\ args[0]\ (creates\ a\ MafiaCountry\ if\ args[1]\ ~\ "mafia").\ \r\n\ \ -\ City\:\ create\ a\ new\ city\ with\ name\ args[0],\ value\ args[1]\ and\ country\ equal\ to\ the\ last\ created\ country\r\n\ \ \ \ (creates\ a\ BorderCity\ if\ args[2]\ ~\ "border"\ and\ a\ CapitalCity\ if\ args[2]\ ~\ "capital").\r\n\ \ -\ Road\:\ create\ a\ new\ road\ with\ length\ args[2]\ from\ a\ city\ with\ name\ ~\ args[0]\ to\ a\ city\ with\ name\ ~args[1].\r\n\ All\ cities\ must\ be\ created\ after\ the\ countries\ in\ which\ they\ are\ positioned.\r\n\ Analogously\ roads\ must\ be\ created\ after\ the\ cities\ which\ they\ connect.\r\n\ Lines\ beginning\ with\ //\ are\ ignored.\ All\ tabs\ are\ replaced\ by\ spaces.\r\n\ Any\ exception\ thrown\ is\ printed\ to\ System.out.\r\n\ \r\n\ @param\ path\ \ \ Path\ of\ the\ file\ to\ load.\r\n\ @return\ \ \ \ \ \ \ Game\ object\ (or\ 'null'\ if\ an\ error\ is\ detected).\r\n\ @throws\ \ \ \ \ \ \ NumberFormatException\ \ \ If\ the\ values\ of\ cities\ are\ not\ ints.\r\n
comment30.params=log
comment30.target=void\ playLog(Log)
comment30.text=\r\n\ Plays\ a\ given\ Log\ object\ within\ this\ Game\ window.\r\n\ Will\ remove\ the\ normal\ GUI-controlled\ Player\ and\ replace\ with\ an\ instance\ of\ LogPlayer.\r\n\ Also\ resets\ the\ game\ to\ the\ seed\ specified\ in\ the\ log.\r\n\ @param\ log\ The\ Log\ to\ play\r\n
comment31.params=
comment31.target=void\ removeLogPlayer()
comment31.text=\r\n\ Removes\ the\ current\ LogPlayer\ instance,\ and\ replaces\ it\ with\ a\ regular\ Player\ object.\r\n\ Also\ resets\ this\ Game\ instance.\r\n
comment4.params=
comment4.target=void\ abort()
comment4.text=\r\n\ Aborts\ the\ current\ game.\r\n
comment5.params=
comment5.target=boolean\ ongoing()
comment5.text=\r\n\ Determines\ whether\ or\ not\ this\ Game\ is\ ongoing.\r\n\ @return\ \ \ true\ and\ only\ if\ this\ Game\ is\ ongoing.\r\n
comment6.params=
comment6.target=Log\ getLog()
comment6.text=\r\n\ Gets\ the\ Log\ object\ of\ this\ Game.\r\n\ @return\ \ Reference\ to\ the\ Log\ object\ of\ this\ Game.\r\n
comment7.params=
comment7.target=java.util.Random\ getRandom()
comment7.text=\r\n\ Gets\ the\ Random\ objects\ of\ this\ Game\ (to\ be\ used\ by\ all\ objects\ in\ this\ project).\r\n\ @return\ \ \ Reference\ to\ the\ Random\ generator\ of\ this\ Game.\r\n
comment8.params=
comment8.target=Settings\ getSettings()
comment8.text=\r\n\ Gets\ the\ Settings\ object.\r\n\ @return\ \ \ Reference\ to\ the\ Settings\ object\ of\ this\ Game.\r\n
comment9.params=
comment9.target=int\ getLoss()
comment9.text=\r\n\ Gets\ the\ loss\ in\ a\ robbery.\r\n\ Returns\ a\ random\ integer\ in\ the\ interval\ [minRobbery,\ maxRobbery]\ determined\ by\ the\ Settings\ object.\r\n\ @return\ \ \ An\ integer\ representing\ how\ many\ euroes\ the\ player\ lost.\r\n
numComments=32
